/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.daos;


import co.tide.com.fitnessapp.db.jooq.tables.Goal;
import co.tide.com.fitnessapp.db.jooq.tables.records.GoalRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class GoalDao extends DAOImpl<GoalRecord, co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal, UUID> {

    /**
     * Create a new GoalDao without any configuration
     */
    public GoalDao() {
        super(Goal.GOAL, co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal.class);
    }

    /**
     * Create a new GoalDao with an attached configuration
     */
    @Autowired
    public GoalDao(Configuration configuration) {
        super(Goal.GOAL, co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal.class, configuration);
    }

    @Override
    public UUID getId(co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Goal.GOAL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchById(UUID... values) {
        return fetch(Goal.GOAL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal fetchOneById(UUID value) {
        return fetchOne(Goal.GOAL.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Goal.GOAL.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByUserId(UUID... values) {
        return fetch(Goal.GOAL.USER_ID, values);
    }

    /**
     * Fetch records that have <code>current_weight BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfCurrentWeight(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Goal.GOAL.CURRENT_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>current_weight IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByCurrentWeight(Integer... values) {
        return fetch(Goal.GOAL.CURRENT_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>goal_weight BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfGoalWeight(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Goal.GOAL.GOAL_WEIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>goal_weight IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByGoalWeight(Integer... values) {
        return fetch(Goal.GOAL.GOAL_WEIGHT, values);
    }

    /**
     * Fetch records that have <code>progress_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfProgressStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Goal.GOAL.PROGRESS_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>progress_status IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByProgressStatus(String... values) {
        return fetch(Goal.GOAL.PROGRESS_STATUS, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Goal.GOAL.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Goal.GOAL.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Goal.GOAL.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Goal> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Goal.GOAL.UPDATED_ON, values);
    }
}
