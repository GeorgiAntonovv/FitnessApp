/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.daos;


import co.tide.com.fitnessapp.db.jooq.tables.Workout;
import co.tide.com.fitnessapp.db.jooq.tables.records.WorkoutRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WorkoutDao extends DAOImpl<WorkoutRecord, co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout, UUID> {

    /**
     * Create a new WorkoutDao without any configuration
     */
    public WorkoutDao() {
        super(Workout.WORKOUT, co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout.class);
    }

    /**
     * Create a new WorkoutDao with an attached configuration
     */
    @Autowired
    public WorkoutDao(Configuration configuration) {
        super(Workout.WORKOUT, co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout.class, configuration);
    }

    @Override
    public UUID getId(co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workout.WORKOUT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchById(UUID... values) {
        return fetch(Workout.WORKOUT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout fetchOneById(UUID value) {
        return fetchOne(Workout.WORKOUT.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workout.WORKOUT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchByUserId(UUID... values) {
        return fetch(Workout.WORKOUT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workout.WORKOUT.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Workout.WORKOUT.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workout.WORKOUT.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Workout> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Workout.WORKOUT.UPDATED_ON, values);
    }
}
