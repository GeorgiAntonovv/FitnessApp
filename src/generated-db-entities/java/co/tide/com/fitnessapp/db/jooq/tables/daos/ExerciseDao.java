/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.daos;


import co.tide.com.fitnessapp.db.jooq.tables.Exercise;
import co.tide.com.fitnessapp.db.jooq.tables.records.ExerciseRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ExerciseDao extends DAOImpl<ExerciseRecord, co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise, UUID> {

    /**
     * Create a new ExerciseDao without any configuration
     */
    public ExerciseDao() {
        super(Exercise.EXERCISE, co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise.class);
    }

    /**
     * Create a new ExerciseDao with an attached configuration
     */
    @Autowired
    public ExerciseDao(Configuration configuration) {
        super(Exercise.EXERCISE, co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise.class, configuration);
    }

    @Override
    public UUID getId(co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Exercise.EXERCISE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchById(UUID... values) {
        return fetch(Exercise.EXERCISE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise fetchOneById(UUID value) {
        return fetchOne(Exercise.EXERCISE.ID, value);
    }

    /**
     * Fetch records that have <code>workout_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfWorkoutId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Exercise.EXERCISE.WORKOUT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workout_id IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByWorkoutId(UUID... values) {
        return fetch(Exercise.EXERCISE.WORKOUT_ID, values);
    }

    /**
     * Fetch records that have <code>exercise_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfExerciseName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Exercise.EXERCISE.EXERCISE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>exercise_name IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByExerciseName(String... values) {
        return fetch(Exercise.EXERCISE.EXERCISE_NAME, values);
    }

    /**
     * Fetch records that have <code>sets BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfSets(String lowerInclusive, String upperInclusive) {
        return fetchRange(Exercise.EXERCISE.SETS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sets IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchBySets(String... values) {
        return fetch(Exercise.EXERCISE.SETS, values);
    }

    /**
     * Fetch records that have <code>reps BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfReps(String lowerInclusive, String upperInclusive) {
        return fetchRange(Exercise.EXERCISE.REPS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reps IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByReps(String... values) {
        return fetch(Exercise.EXERCISE.REPS, values);
    }

    /**
     * Fetch records that have <code>notes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfNotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Exercise.EXERCISE.NOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByNotes(String... values) {
        return fetch(Exercise.EXERCISE.NOTES, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Exercise.EXERCISE.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Exercise.EXERCISE.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Exercise.EXERCISE.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<co.tide.com.fitnessapp.db.jooq.tables.pojos.Exercise> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Exercise.EXERCISE.UPDATED_ON, values);
    }
}
