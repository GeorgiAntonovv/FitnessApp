/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.records;


import co.tide.com.fitnessapp.db.jooq.tables.User;

import java.beans.ConstructorProperties;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record13<UUID, String, String, String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.id</code>.
     */
    public UserRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>user.username</code>.
     */
    public UserRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>user.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.first_name</code>.
     */
    public UserRecord setFirstName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>user.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.last_name</code>.
     */
    public UserRecord setLastName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>user.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>user.email</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>user.role</code>.
     */
    public UserRecord setRole(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>user.role</code>.
     */
    public String getRole() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user.current_weight</code>.
     */
    public UserRecord setCurrentWeight(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>user.current_weight</code>.
     */
    public Integer getCurrentWeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>user.goal_weight</code>.
     */
    public UserRecord setGoalWeight(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>user.goal_weight</code>.
     */
    public Integer getGoalWeight() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>user.body_fat</code>.
     */
    public UserRecord setBodyFat(BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>user.body_fat</code>.
     */
    public BigDecimal getBodyFat() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>user.goal_body_fat</code>.
     */
    public UserRecord setGoalBodyFat(BigDecimal value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>user.goal_body_fat</code>.
     */
    public BigDecimal getGoalBodyFat() {
        return (BigDecimal) get(10);
    }

    /**
     * Setter for <code>user.created_on</code>.
     */
    public UserRecord setCreatedOn(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>user.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>user.updated_on</code>.
     */
    public UserRecord setUpdatedOn(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>user.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, String, String, String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UUID, String, String, String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<String> field6() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field7() {
        return User.USER.ROLE;
    }

    @Override
    public Field<Integer> field8() {
        return User.USER.CURRENT_WEIGHT;
    }

    @Override
    public Field<Integer> field9() {
        return User.USER.GOAL_WEIGHT;
    }

    @Override
    public Field<BigDecimal> field10() {
        return User.USER.BODY_FAT;
    }

    @Override
    public Field<BigDecimal> field11() {
        return User.USER.GOAL_BODY_FAT;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return User.USER.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return User.USER.UPDATED_ON;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getFirstName();
    }

    @Override
    public String component5() {
        return getLastName();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public String component7() {
        return getRole();
    }

    @Override
    public Integer component8() {
        return getCurrentWeight();
    }

    @Override
    public Integer component9() {
        return getGoalWeight();
    }

    @Override
    public BigDecimal component10() {
        return getBodyFat();
    }

    @Override
    public BigDecimal component11() {
        return getGoalBodyFat();
    }

    @Override
    public LocalDateTime component12() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component13() {
        return getUpdatedOn();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getFirstName();
    }

    @Override
    public String value5() {
        return getLastName();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public String value7() {
        return getRole();
    }

    @Override
    public Integer value8() {
        return getCurrentWeight();
    }

    @Override
    public Integer value9() {
        return getGoalWeight();
    }

    @Override
    public BigDecimal value10() {
        return getBodyFat();
    }

    @Override
    public BigDecimal value11() {
        return getGoalBodyFat();
    }

    @Override
    public LocalDateTime value12() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value13() {
        return getUpdatedOn();
    }

    @Override
    public UserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value8(Integer value) {
        setCurrentWeight(value);
        return this;
    }

    @Override
    public UserRecord value9(Integer value) {
        setGoalWeight(value);
        return this;
    }

    @Override
    public UserRecord value10(BigDecimal value) {
        setBodyFat(value);
        return this;
    }

    @Override
    public UserRecord value11(BigDecimal value) {
        setGoalBodyFat(value);
        return this;
    }

    @Override
    public UserRecord value12(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public UserRecord value13(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public UserRecord values(UUID value1, String value2, String value3, String value4, String value5, String value6, String value7, Integer value8, Integer value9, BigDecimal value10, BigDecimal value11, LocalDateTime value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    @ConstructorProperties({ "id", "username", "password", "firstName", "lastName", "email", "role", "currentWeight", "goalWeight", "bodyFat", "goalBodyFat", "createdOn", "updatedOn" })
    public UserRecord(UUID id, String username, String password, String firstName, String lastName, String email, String role, Integer currentWeight, Integer goalWeight, BigDecimal bodyFat, BigDecimal goalBodyFat, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(User.USER);

        setId(id);
        setUsername(username);
        setPassword(password);
        setFirstName(firstName);
        setLastName(lastName);
        setEmail(email);
        setRole(role);
        setCurrentWeight(currentWeight);
        setGoalWeight(goalWeight);
        setBodyFat(bodyFat);
        setGoalBodyFat(goalBodyFat);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
