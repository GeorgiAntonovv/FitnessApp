/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.records;


import co.tide.com.fitnessapp.db.jooq.tables.Meal;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MealRecord extends UpdatableRecordImpl<MealRecord> implements Record4<UUID, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>meal.id</code>.
     */
    public MealRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>meal.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>meal.user_id</code>.
     */
    public MealRecord setUserId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>meal.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>meal.created_on</code>.
     */
    public MealRecord setCreatedOn(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>meal.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>meal.updated_on</code>.
     */
    public MealRecord setUpdatedOn(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>meal.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Meal.MEAL.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Meal.MEAL.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Meal.MEAL.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Meal.MEAL.UPDATED_ON;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedOn();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedOn();
    }

    @Override
    public MealRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MealRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public MealRecord value3(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public MealRecord value4(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public MealRecord values(UUID value1, UUID value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MealRecord
     */
    public MealRecord() {
        super(Meal.MEAL);
    }

    /**
     * Create a detached, initialised MealRecord
     */
    @ConstructorProperties({ "id", "userId", "createdOn", "updatedOn" })
    public MealRecord(UUID id, UUID userId, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Meal.MEAL);

        setId(id);
        setUserId(userId);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
