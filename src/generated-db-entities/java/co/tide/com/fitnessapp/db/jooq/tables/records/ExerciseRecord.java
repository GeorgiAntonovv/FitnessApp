/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.records;


import co.tide.com.fitnessapp.db.jooq.tables.Exercise;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExerciseRecord extends UpdatableRecordImpl<ExerciseRecord> implements Record8<UUID, UUID, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>exercise.id</code>.
     */
    public ExerciseRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>exercise.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>exercise.workout_id</code>.
     */
    public ExerciseRecord setWorkoutId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>exercise.workout_id</code>.
     */
    public UUID getWorkoutId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>exercise.exercise_name</code>.
     */
    public ExerciseRecord setExerciseName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>exercise.exercise_name</code>.
     */
    public String getExerciseName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>exercise.sets</code>.
     */
    public ExerciseRecord setSets(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>exercise.sets</code>.
     */
    public String getSets() {
        return (String) get(3);
    }

    /**
     * Setter for <code>exercise.reps</code>.
     */
    public ExerciseRecord setReps(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>exercise.reps</code>.
     */
    public String getReps() {
        return (String) get(4);
    }

    /**
     * Setter for <code>exercise.notes</code>.
     */
    public ExerciseRecord setNotes(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>exercise.notes</code>.
     */
    public String getNotes() {
        return (String) get(5);
    }

    /**
     * Setter for <code>exercise.created_on</code>.
     */
    public ExerciseRecord setCreatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>exercise.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>exercise.updated_on</code>.
     */
    public ExerciseRecord setUpdatedOn(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>exercise.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Exercise.EXERCISE.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Exercise.EXERCISE.WORKOUT_ID;
    }

    @Override
    public Field<String> field3() {
        return Exercise.EXERCISE.EXERCISE_NAME;
    }

    @Override
    public Field<String> field4() {
        return Exercise.EXERCISE.SETS;
    }

    @Override
    public Field<String> field5() {
        return Exercise.EXERCISE.REPS;
    }

    @Override
    public Field<String> field6() {
        return Exercise.EXERCISE.NOTES;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Exercise.EXERCISE.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Exercise.EXERCISE.UPDATED_ON;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getWorkoutId();
    }

    @Override
    public String component3() {
        return getExerciseName();
    }

    @Override
    public String component4() {
        return getSets();
    }

    @Override
    public String component5() {
        return getReps();
    }

    @Override
    public String component6() {
        return getNotes();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedOn();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getWorkoutId();
    }

    @Override
    public String value3() {
        return getExerciseName();
    }

    @Override
    public String value4() {
        return getSets();
    }

    @Override
    public String value5() {
        return getReps();
    }

    @Override
    public String value6() {
        return getNotes();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedOn();
    }

    @Override
    public ExerciseRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ExerciseRecord value2(UUID value) {
        setWorkoutId(value);
        return this;
    }

    @Override
    public ExerciseRecord value3(String value) {
        setExerciseName(value);
        return this;
    }

    @Override
    public ExerciseRecord value4(String value) {
        setSets(value);
        return this;
    }

    @Override
    public ExerciseRecord value5(String value) {
        setReps(value);
        return this;
    }

    @Override
    public ExerciseRecord value6(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public ExerciseRecord value7(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public ExerciseRecord value8(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public ExerciseRecord values(UUID value1, UUID value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExerciseRecord
     */
    public ExerciseRecord() {
        super(Exercise.EXERCISE);
    }

    /**
     * Create a detached, initialised ExerciseRecord
     */
    @ConstructorProperties({ "id", "workoutId", "exerciseName", "sets", "reps", "notes", "createdOn", "updatedOn" })
    public ExerciseRecord(UUID id, UUID workoutId, String exerciseName, String sets, String reps, String notes, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Exercise.EXERCISE);

        setId(id);
        setWorkoutId(workoutId);
        setExerciseName(exerciseName);
        setSets(sets);
        setReps(reps);
        setNotes(notes);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
