/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.records;


import co.tide.com.fitnessapp.db.jooq.tables.Goal;

import java.beans.ConstructorProperties;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoalRecord extends UpdatableRecordImpl<GoalRecord> implements Record7<UUID, UUID, Integer, Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>goal.id</code>.
     */
    public GoalRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>goal.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>goal.user_id</code>.
     */
    public GoalRecord setUserId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>goal.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>goal.current_weight</code>.
     */
    public GoalRecord setCurrentWeight(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>goal.current_weight</code>.
     */
    public Integer getCurrentWeight() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>goal.goal_weight</code>.
     */
    public GoalRecord setGoalWeight(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>goal.goal_weight</code>.
     */
    public Integer getGoalWeight() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>goal.progress_status</code>.
     */
    public GoalRecord setProgressStatus(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>goal.progress_status</code>.
     */
    public String getProgressStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>goal.created_on</code>.
     */
    public GoalRecord setCreatedOn(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>goal.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>goal.updated_on</code>.
     */
    public GoalRecord setUpdatedOn(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>goal.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, Integer, Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Goal.GOAL.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Goal.GOAL.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Goal.GOAL.CURRENT_WEIGHT;
    }

    @Override
    public Field<Integer> field4() {
        return Goal.GOAL.GOAL_WEIGHT;
    }

    @Override
    public Field<String> field5() {
        return Goal.GOAL.PROGRESS_STATUS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Goal.GOAL.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Goal.GOAL.UPDATED_ON;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getCurrentWeight();
    }

    @Override
    public Integer component4() {
        return getGoalWeight();
    }

    @Override
    public String component5() {
        return getProgressStatus();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getCurrentWeight();
    }

    @Override
    public Integer value4() {
        return getGoalWeight();
    }

    @Override
    public String value5() {
        return getProgressStatus();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    public GoalRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GoalRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public GoalRecord value3(Integer value) {
        setCurrentWeight(value);
        return this;
    }

    @Override
    public GoalRecord value4(Integer value) {
        setGoalWeight(value);
        return this;
    }

    @Override
    public GoalRecord value5(String value) {
        setProgressStatus(value);
        return this;
    }

    @Override
    public GoalRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public GoalRecord value7(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public GoalRecord values(UUID value1, UUID value2, Integer value3, Integer value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GoalRecord
     */
    public GoalRecord() {
        super(Goal.GOAL);
    }

    /**
     * Create a detached, initialised GoalRecord
     */
    @ConstructorProperties({ "id", "userId", "currentWeight", "goalWeight", "progressStatus", "createdOn", "updatedOn" })
    public GoalRecord(UUID id, UUID userId, Integer currentWeight, Integer goalWeight, String progressStatus, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Goal.GOAL);

        setId(id);
        setUserId(userId);
        setCurrentWeight(currentWeight);
        setGoalWeight(goalWeight);
        setProgressStatus(progressStatus);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
