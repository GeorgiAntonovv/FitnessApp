/*
 * This file is generated by jOOQ.
 */
package co.tide.com.fitnessapp.db.jooq.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Food implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID          id;
    private UUID          mealId;
    private String        foodName;
    private Integer       calories;
    private Integer       protein;
    private Integer       fats;
    private Integer       carbs;
    private LocalDateTime createdOn;
    private LocalDateTime updatedOn;

    public Food() {}

    public Food(Food value) {
        this.id = value.id;
        this.mealId = value.mealId;
        this.foodName = value.foodName;
        this.calories = value.calories;
        this.protein = value.protein;
        this.fats = value.fats;
        this.carbs = value.carbs;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    @ConstructorProperties({ "id", "mealId", "foodName", "calories", "protein", "fats", "carbs", "createdOn", "updatedOn" })
    public Food(
        UUID          id,
        UUID          mealId,
        String        foodName,
        Integer       calories,
        Integer       protein,
        Integer       fats,
        Integer       carbs,
        LocalDateTime createdOn,
        LocalDateTime updatedOn
    ) {
        this.id = id;
        this.mealId = mealId;
        this.foodName = foodName;
        this.calories = calories;
        this.protein = protein;
        this.fats = fats;
        this.carbs = carbs;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>food.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>food.id</code>.
     */
    public Food setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>food.meal_id</code>.
     */
    public UUID getMealId() {
        return this.mealId;
    }

    /**
     * Setter for <code>food.meal_id</code>.
     */
    public Food setMealId(UUID mealId) {
        this.mealId = mealId;
        return this;
    }

    /**
     * Getter for <code>food.food_name</code>.
     */
    public String getFoodName() {
        return this.foodName;
    }

    /**
     * Setter for <code>food.food_name</code>.
     */
    public Food setFoodName(String foodName) {
        this.foodName = foodName;
        return this;
    }

    /**
     * Getter for <code>food.calories</code>.
     */
    public Integer getCalories() {
        return this.calories;
    }

    /**
     * Setter for <code>food.calories</code>.
     */
    public Food setCalories(Integer calories) {
        this.calories = calories;
        return this;
    }

    /**
     * Getter for <code>food.protein</code>.
     */
    public Integer getProtein() {
        return this.protein;
    }

    /**
     * Setter for <code>food.protein</code>.
     */
    public Food setProtein(Integer protein) {
        this.protein = protein;
        return this;
    }

    /**
     * Getter for <code>food.fats</code>.
     */
    public Integer getFats() {
        return this.fats;
    }

    /**
     * Setter for <code>food.fats</code>.
     */
    public Food setFats(Integer fats) {
        this.fats = fats;
        return this;
    }

    /**
     * Getter for <code>food.carbs</code>.
     */
    public Integer getCarbs() {
        return this.carbs;
    }

    /**
     * Setter for <code>food.carbs</code>.
     */
    public Food setCarbs(Integer carbs) {
        this.carbs = carbs;
        return this;
    }

    /**
     * Getter for <code>food.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>food.created_on</code>.
     */
    public Food setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>food.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>food.updated_on</code>.
     */
    public Food setUpdatedOn(LocalDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Food other = (Food) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (mealId == null) {
            if (other.mealId != null)
                return false;
        }
        else if (!mealId.equals(other.mealId))
            return false;
        if (foodName == null) {
            if (other.foodName != null)
                return false;
        }
        else if (!foodName.equals(other.foodName))
            return false;
        if (calories == null) {
            if (other.calories != null)
                return false;
        }
        else if (!calories.equals(other.calories))
            return false;
        if (protein == null) {
            if (other.protein != null)
                return false;
        }
        else if (!protein.equals(other.protein))
            return false;
        if (fats == null) {
            if (other.fats != null)
                return false;
        }
        else if (!fats.equals(other.fats))
            return false;
        if (carbs == null) {
            if (other.carbs != null)
                return false;
        }
        else if (!carbs.equals(other.carbs))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!createdOn.equals(other.createdOn))
            return false;
        if (updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        }
        else if (!updatedOn.equals(other.updatedOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.mealId == null) ? 0 : this.mealId.hashCode());
        result = prime * result + ((this.foodName == null) ? 0 : this.foodName.hashCode());
        result = prime * result + ((this.calories == null) ? 0 : this.calories.hashCode());
        result = prime * result + ((this.protein == null) ? 0 : this.protein.hashCode());
        result = prime * result + ((this.fats == null) ? 0 : this.fats.hashCode());
        result = prime * result + ((this.carbs == null) ? 0 : this.carbs.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.updatedOn == null) ? 0 : this.updatedOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Food (");

        sb.append(id);
        sb.append(", ").append(mealId);
        sb.append(", ").append(foodName);
        sb.append(", ").append(calories);
        sb.append(", ").append(protein);
        sb.append(", ").append(fats);
        sb.append(", ").append(carbs);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
}
